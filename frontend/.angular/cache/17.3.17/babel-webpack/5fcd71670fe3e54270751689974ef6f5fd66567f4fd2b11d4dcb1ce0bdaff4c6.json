{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'http://localhost:8080/api/auth/login';\n      this.isLoggedIn = false;\n    }\n    login(username, password) {\n      return this.http.post(this.apiUrl, {\n        username,\n        password\n      }, {\n        withCredentials: true,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).pipe(tap(response => {\n        this.isLoggedIn = true;\n        localStorage.setItem('username', response.username);\n        localStorage.setItem('role', response.role);\n        console.log(\"response username: \", response.username);\n        console.log(\"response userRole: \", response.role);\n        his.usernameSubject.next(username);\n      }));\n    }\n    isUserLoggedIn() {\n      return this.isLoggedIn;\n    }\n    getUsername() {\n      return localStorage.getItem('username') || '';\n    }\n    getUserRole() {\n      return localStorage.getItem('role') || '';\n    }\n    getToken() {\n      return localStorage.getItem('token');\n    }\n    isUser() {\n      return this.getUserRole().includes('ROLE_USER');\n    }\n    saveToken(token) {\n      localStorage.setItem('token', token);\n    }\n    logout() {\n      // this.isLoggedIn = false;\n      // this.userRole = '';\n      localStorage.removeItem('username');\n      localStorage.removeItem('role');\n      return this.http.post(`${this.apiUrl}/auth/logout`, {}, {\n        withCredentials: true\n      });\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(t) {\n        return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}