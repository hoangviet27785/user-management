{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/user.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UserFormComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const r_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", r_r3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(r_r3.replace(\"ROLE_\", \"\"));\n  }\n}\nexport let UserFormComponent = /*#__PURE__*/(() => {\n  class UserFormComponent {\n    constructor(route, router, userService) {\n      this.route = route;\n      this.router = router;\n      this.userService = userService;\n      this.model = {\n        name: '',\n        role: '',\n        create_at: ''\n      };\n      this.roles = ['ROLE_ADMIN', 'ROLE_USER'];\n      this.title = 'Thêm người dùng';\n      this.submitting = false;\n    }\n    ngOnInit() {\n      const idParam = this.route.snapshot.paramMap.get('id');\n      if (idParam) {\n        this.id = +idParam;\n        this.title = 'Cập nhật người dùng';\n        this.userService.getById(this.id).subscribe({\n          next: u => this.model = u,\n          error: e => console.error('Load user failed', e)\n        });\n      }\n    }\n    submit(form) {\n      if (form.invalid) return;\n      this.submitting = true;\n      const payload = {\n        name: this.model.name,\n        role: this.model.role,\n        create_at: this.model.create_at\n      };\n      const obs = this.id ? this.userService.update(this.id, payload) : this.userService.createUser(payload);\n      obs.subscribe({\n        next: () => this.router.navigate(['/users']),\n        error: e => {\n          this.submitting = false;\n          alert('Fail to save user');\n          console.error(e);\n        }\n      });\n    }\n    static {\n      this.ɵfac = function UserFormComponent_Factory(t) {\n        return new (t || UserFormComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UserService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: UserFormComponent,\n        selectors: [[\"app-user-form\"]],\n        decls: 17,\n        vars: 5,\n        consts: [[\"f\", \"ngForm\"], [1, \"mt-3\", 3, \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"formControlName\", \"role\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 2, \"margin-right\", \"10px\", 3, \"disabled\"], [\"routerLink\", \"/users\", 1, \"btn\", \"btn-danger\"], [3, \"value\"]],\n        template: function UserFormComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"h3\");\n            i0.ɵɵtext(1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"form\", 1, 0);\n            i0.ɵɵlistener(\"ngSubmit\", function UserFormComponent_Template_form_ngSubmit_2_listener() {\n              i0.ɵɵrestoreView(_r1);\n              const f_r2 = i0.ɵɵreference(3);\n              return i0.ɵɵresetView(ctx.submit(f_r2));\n            });\n            i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n            i0.ɵɵtext(6, \"T\\u00EAn\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"input\", 4);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function UserFormComponent_Template_input_ngModelChange_7_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              i0.ɵɵtwoWayBindingSet(ctx.model.name, $event) || (ctx.model.name = $event);\n              return i0.ɵɵresetView($event);\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 3);\n            i0.ɵɵtext(10, \"Vai tr\\u00F2\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"select\", 5);\n            i0.ɵɵtemplate(12, UserFormComponent_option_12_Template, 2, 2, \"option\", 6);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(13, \"button\", 7);\n            i0.ɵɵtext(14);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"a\", 8);\n            i0.ɵɵtext(16, \"Cancel\");\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate(ctx.title);\n            i0.ɵɵadvance(6);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.model.name);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", ctx.submitting);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.submitting ? \"Save...\" : \"Save\", \" \");\n          }\n        },\n        dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i1.RouterLink],\n        encapsulation: 2\n      });\n    }\n  }\n  return UserFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}